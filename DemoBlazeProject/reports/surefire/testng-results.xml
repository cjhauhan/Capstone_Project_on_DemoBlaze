<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-06T12:00:31 IST" name="DemoBlazeSuite" finished-at="2025-09-06T12:03:29 IST" duration-ms="178486">
    <groups>
    </groups>
    <test started-at="2025-09-06T12:00:31 IST" name="Functional Tests" finished-at="2025-09-06T12:03:29 IST" duration-ms="178486">
      <class name="test.DuplicateSignupTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.DuplicateSignupTest@2bd2b28e]" started-at="2025-09-06T12:01:28 IST" name="setUp" finished-at="2025-09-06T12:01:30 IST" duration-ms="2415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.DuplicateSignupTest.signupWithExistingUsernameShowsError()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="signupWithExistingUsernameShowsError()[pri:0, instance:test.DuplicateSignupTest@2bd2b28e]" started-at="2025-09-06T12:01:30 IST" name="signupWithExistingUsernameShowsError" finished-at="2025-09-06T12:01:59 IST" duration-ms="29346" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.id: sign-username (tried for 25 second(s) with 500 milliseconds interval)
Build info: version: '4.23.0', revision: '4df0a231af'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.12'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.155, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55776}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55776/devtoo..., se:cdpVersion: 139.0.7258.155, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d057dfd415943d21e2339ee5c9f16734]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.id: sign-username (tried for 25 second(s) with 500 milliseconds interval)
Build info: version: '4.23.0', revision: '4df0a231af'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.12'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.155, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55776}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55776/devtoo..., se:cdpVersion: 139.0.7258.155, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d057dfd415943d21e2339ee5c9f16734
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at page.components.ModalsPage.openSignupModal(ModalsPage.java:26)
at page.HomePage.openSignupModal(HomePage.java:115)
at test.DuplicateSignupTest.signupWithExistingUsernameShowsError(DuplicateSignupTest.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupWithExistingUsernameShowsError -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.DuplicateSignupTest@2bd2b28e]" started-at="2025-09-06T12:01:59 IST" name="tearDown" finished-at="2025-09-06T12:02:00 IST" duration-ms="364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signupWithExistingUsernameShowsError status=FAILURE method=DuplicateSignupTest.signupWithExistingUsernameShowsError()[pri:0, instance:test.DuplicateSignupTest@2bd2b28e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.DuplicateSignupTest -->
      <class name="test.CartPersistenceOnRefreshTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.CartPersistenceOnRefreshTest@5c8eee0f]" started-at="2025-09-06T12:02:53 IST" name="setUp" finished-at="2025-09-06T12:02:55 IST" duration-ms="2619" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.CartPersistenceOnRefreshTest.cartItemsPersistAfterRefresh() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="cartItemsPersistAfterRefresh()[pri:0, instance:test.CartPersistenceOnRefreshTest@5c8eee0f]" started-at="2025-09-06T12:02:55 IST" name="cartItemsPersistAfterRefresh" finished-at="2025-09-06T12:03:06 IST" duration-ms="10834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cartItemsPersistAfterRefresh -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.CartPersistenceOnRefreshTest@5c8eee0f]" started-at="2025-09-06T12:03:06 IST" name="tearDown" finished-at="2025-09-06T12:03:06 IST" duration-ms="317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cartItemsPersistAfterRefresh status=SUCCESS method=CartPersistenceOnRefreshTest.cartItemsPersistAfterRefresh()[pri:0, instance:test.CartPersistenceOnRefreshTest@5c8eee0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.CartPersistenceOnRefreshTest -->
      <class name="test.WrongPasswordTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.WrongPasswordTest@57fd91c9]" started-at="2025-09-06T12:02:04 IST" name="setUp" finished-at="2025-09-06T12:02:05 IST" duration-ms="1363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.WrongPasswordTest.loginWithWrongPassword() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginWithWrongPassword()[pri:0, instance:test.WrongPasswordTest@57fd91c9]" started-at="2025-09-06T12:02:05 IST" name="loginWithWrongPassword" description="Login with wrong password and close browser" finished-at="2025-09-06T12:02:13 IST" duration-ms="7566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithWrongPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.WrongPasswordTest@57fd91c9]" started-at="2025-09-06T12:02:13 IST" name="tearDown" finished-at="2025-09-06T12:02:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithWrongPassword status=SUCCESS method=WrongPasswordTest.loginWithWrongPassword()[pri:0, instance:test.WrongPasswordTest@57fd91c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.WrongPasswordTest -->
      <class name="test.ProductDetailsTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.ProductDetailsTest@6cfcd46d]" started-at="2025-09-06T12:02:13 IST" name="setUp" finished-at="2025-09-06T12:02:15 IST" duration-ms="1714" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.ProductDetailsTest.productTitlePriceAndDescriptionAreVisible()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="productTitlePriceAndDescriptionAreVisible()[pri:0, instance:test.ProductDetailsTest@6cfcd46d]" started-at="2025-09-06T12:02:15 IST" name="productTitlePriceAndDescriptionAreVisible" finished-at="2025-09-06T12:02:18 IST" duration-ms="3749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productTitlePriceAndDescriptionAreVisible -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.ProductDetailsTest@6cfcd46d]" started-at="2025-09-06T12:02:19 IST" name="tearDown" finished-at="2025-09-06T12:02:19 IST" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=productTitlePriceAndDescriptionAreVisible status=SUCCESS method=ProductDetailsTest.productTitlePriceAndDescriptionAreVisible()[pri:0, instance:test.ProductDetailsTest@6cfcd46d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.ProductDetailsTest -->
      <class name="test.SignupLoginLogoutTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.SignupLoginLogoutTest@60641ec8]" started-at="2025-09-06T12:00:47 IST" name="setUp" finished-at="2025-09-06T12:00:49 IST" duration-ms="1839" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.SignupLoginLogoutTest.signupLoginAndLogout() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="signupLoginAndLogout()[pri:0, instance:test.SignupLoginLogoutTest@60641ec8]" started-at="2025-09-06T12:00:49 IST" name="signupLoginAndLogout" description="Sign up a unique user, login and then logout (stable - doesn&#039;t require pre-created user)" finished-at="2025-09-06T12:01:27 IST" duration-ms="38015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupLoginAndLogout -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.SignupLoginLogoutTest@60641ec8]" started-at="2025-09-06T12:01:27 IST" name="tearDown" finished-at="2025-09-06T12:01:28 IST" duration-ms="365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signupLoginAndLogout status=SUCCESS method=SignupLoginLogoutTest.signupLoginAndLogout()[pri:0, instance:test.SignupLoginLogoutTest@60641ec8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.SignupLoginLogoutTest -->
      <class name="test.DeleteSpecificItemTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.DeleteSpecificItemTest@674658f7]" started-at="2025-09-06T12:02:29 IST" name="setUp" finished-at="2025-09-06T12:02:30 IST" duration-ms="1347" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.DeleteSpecificItemTest.deletingOneItemKeepsOtherAndUpdatesTotal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="deletingOneItemKeepsOtherAndUpdatesTotal()[pri:0, instance:test.DeleteSpecificItemTest@674658f7]" started-at="2025-09-06T12:02:30 IST" name="deletingOneItemKeepsOtherAndUpdatesTotal" finished-at="2025-09-06T12:02:52 IST" duration-ms="21696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletingOneItemKeepsOtherAndUpdatesTotal -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.DeleteSpecificItemTest@674658f7]" started-at="2025-09-06T12:02:52 IST" name="tearDown" finished-at="2025-09-06T12:02:53 IST" duration-ms="443" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deletingOneItemKeepsOtherAndUpdatesTotal status=SUCCESS method=DeleteSpecificItemTest.deletingOneItemKeepsOtherAndUpdatesTotal()[pri:0, instance:test.DeleteSpecificItemTest@674658f7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.DeleteSpecificItemTest -->
      <class name="test.PlaceOrderTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.PlaceOrderTest@565b064f]" started-at="2025-09-06T12:03:06 IST" name="setUp" finished-at="2025-09-06T12:03:08 IST" duration-ms="1215" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.PlaceOrderTest.placeOrderSuccessfully()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="placeOrderSuccessfully()[pri:0, instance:test.PlaceOrderTest@565b064f]" started-at="2025-09-06T12:03:08 IST" name="placeOrderSuccessfully" description="Place order and verify confirmation" finished-at="2025-09-06T12:03:17 IST" duration-ms="9687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrderSuccessfully -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.PlaceOrderTest@565b064f]" started-at="2025-09-06T12:03:17 IST" name="tearDown" finished-at="2025-09-06T12:03:19 IST" duration-ms="1779" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeOrderSuccessfully status=SUCCESS method=PlaceOrderTest.placeOrderSuccessfully()[pri:0, instance:test.PlaceOrderTest@565b064f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.PlaceOrderTest -->
      <class name="test.EmptyLoginValidationTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.EmptyLoginValidationTest@16746061]" started-at="2025-09-06T12:02:00 IST" name="setUp" finished-at="2025-09-06T12:02:01 IST" duration-ms="1455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.EmptyLoginValidationTest.loginWithEmptyFieldsShowsAlert()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginWithEmptyFieldsShowsAlert()[pri:0, instance:test.EmptyLoginValidationTest@16746061]" started-at="2025-09-06T12:02:01 IST" name="loginWithEmptyFieldsShowsAlert" finished-at="2025-09-06T12:02:04 IST" duration-ms="2393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithEmptyFieldsShowsAlert -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.EmptyLoginValidationTest@16746061]" started-at="2025-09-06T12:02:04 IST" name="tearDown" finished-at="2025-09-06T12:02:04 IST" duration-ms="210" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithEmptyFieldsShowsAlert status=SUCCESS method=EmptyLoginValidationTest.loginWithEmptyFieldsShowsAlert()[pri:0, instance:test.EmptyLoginValidationTest@16746061] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.EmptyLoginValidationTest -->
      <class name="test.AddToCartTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.AddToCartTest@52045dbe]" started-at="2025-09-06T12:02:19 IST" name="setUp" finished-at="2025-09-06T12:02:20 IST" duration-ms="1221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.AddToCartTest.addPhoneAndLaptopToCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addPhoneAndLaptopToCart()[pri:0, instance:test.AddToCartTest@52045dbe]" started-at="2025-09-06T12:02:20 IST" name="addPhoneAndLaptopToCart" description="Add phone and laptop to cart, then verify both exist" finished-at="2025-09-06T12:02:29 IST" duration-ms="8688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPhoneAndLaptopToCart -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@52045dbe]" started-at="2025-09-06T12:02:29 IST" name="tearDown" finished-at="2025-09-06T12:02:29 IST" duration-ms="259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addPhoneAndLaptopToCart status=SUCCESS method=AddToCartTest.addPhoneAndLaptopToCart()[pri:0, instance:test.AddToCartTest@52045dbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.AddToCartTest -->
      <class name="test.SignupLoginTest">
        <test-method is-config="true" signature="startReport()[pri:0, instance:test.SignupLoginTest@4c398c80]" started-at="2025-09-06T12:00:30 IST" name="startReport" finished-at="2025-09-06T12:00:31 IST" duration-ms="481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.SignupLoginTest@4c398c80]" started-at="2025-09-06T12:00:31 IST" name="setUp" finished-at="2025-09-06T12:00:35 IST" duration-ms="4488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.SignupLoginTest.signupAndLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="signupAndLogin()[pri:0, instance:test.SignupLoginTest@4c398c80]" started-at="2025-09-06T12:00:35 IST" name="signupAndLogin" description="Sign up a new user and verify login" finished-at="2025-09-06T12:00:47 IST" duration-ms="11403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupAndLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.SignupLoginTest@4c398c80]" started-at="2025-09-06T12:00:47 IST" name="tearDown" finished-at="2025-09-06T12:00:47 IST" duration-ms="383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signupAndLogin status=SUCCESS method=SignupLoginTest.signupAndLogin()[pri:0, instance:test.SignupLoginTest@4c398c80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flushReport()[pri:0, instance:test.SignupLoginTest@4c398c80]" started-at="2025-09-06T12:03:29 IST" name="flushReport" finished-at="2025-09-06T12:03:30 IST" duration-ms="746" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
      </class> <!-- test.SignupLoginTest -->
      <class name="test.CheckoutNegativeTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.CheckoutNegativeTest@26425897]" started-at="2025-09-06T12:03:19 IST" name="setUp" finished-at="2025-09-06T12:03:20 IST" duration-ms="1176" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.CheckoutNegativeTest.purchaseWithMissingFieldsShowsValidation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="purchaseWithMissingFieldsShowsValidation()[pri:0, instance:test.CheckoutNegativeTest@26425897]" started-at="2025-09-06T12:03:20 IST" name="purchaseWithMissingFieldsShowsValidation" finished-at="2025-09-06T12:03:29 IST" duration-ms="8470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseWithMissingFieldsShowsValidation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.CheckoutNegativeTest@26425897]" started-at="2025-09-06T12:03:29 IST" name="tearDown" finished-at="2025-09-06T12:03:29 IST" duration-ms="306" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=purchaseWithMissingFieldsShowsValidation status=SUCCESS method=CheckoutNegativeTest.purchaseWithMissingFieldsShowsValidation()[pri:0, instance:test.CheckoutNegativeTest@26425897] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.CheckoutNegativeTest -->
    </test> <!-- Functional Tests -->
  </suite> <!-- DemoBlazeSuite -->
</testng-results>
