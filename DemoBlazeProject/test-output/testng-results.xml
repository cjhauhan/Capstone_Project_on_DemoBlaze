<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="10" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-06T12:09:50 IST" name="DemoBlazeSuite" finished-at="2025-09-06T12:12:28 IST" duration-ms="158333">
    <groups>
    </groups>
    <test started-at="2025-09-06T12:09:50 IST" name="Functional Tests" finished-at="2025-09-06T12:12:28 IST" duration-ms="158333">
      <class name="test.CartPersistenceOnRefreshTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.CartPersistenceOnRefreshTest@239b0f9d]" started-at="2025-09-06T12:11:46 IST" name="setUp" finished-at="2025-09-06T12:11:47 IST" duration-ms="1097" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.CartPersistenceOnRefreshTest.cartItemsPersistAfterRefresh() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="cartItemsPersistAfterRefresh()[pri:0, instance:test.CartPersistenceOnRefreshTest@239b0f9d]" started-at="2025-09-06T12:11:47 IST" name="cartItemsPersistAfterRefresh" finished-at="2025-09-06T12:11:59 IST" duration-ms="11757" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cartItemsPersistAfterRefresh -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.CartPersistenceOnRefreshTest@239b0f9d]" started-at="2025-09-06T12:11:59 IST" name="tearDown" finished-at="2025-09-06T12:12:00 IST" duration-ms="529" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cartItemsPersistAfterRefresh status=SUCCESS method=CartPersistenceOnRefreshTest.cartItemsPersistAfterRefresh()[pri:0, instance:test.CartPersistenceOnRefreshTest@239b0f9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.CartPersistenceOnRefreshTest -->
      <class name="test.WrongPasswordTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.WrongPasswordTest@636e8cc]" started-at="2025-09-06T12:10:48 IST" name="setUp" finished-at="2025-09-06T12:10:49 IST" duration-ms="953" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.WrongPasswordTest.loginWithWrongPassword() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginWithWrongPassword()[pri:0, instance:test.WrongPasswordTest@636e8cc]" started-at="2025-09-06T12:10:49 IST" name="loginWithWrongPassword" description="Login with wrong password and close browser" finished-at="2025-09-06T12:10:55 IST" duration-ms="6145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithWrongPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.WrongPasswordTest@636e8cc]" started-at="2025-09-06T12:10:55 IST" name="tearDown" finished-at="2025-09-06T12:10:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithWrongPassword status=SUCCESS method=WrongPasswordTest.loginWithWrongPassword()[pri:0, instance:test.WrongPasswordTest@636e8cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.WrongPasswordTest -->
      <class name="test.ProductDetailsTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.ProductDetailsTest@f79a760]" started-at="2025-09-06T12:10:55 IST" name="setUp" finished-at="2025-09-06T12:10:57 IST" duration-ms="1038" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.ProductDetailsTest.productTitlePriceAndDescriptionAreVisible()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="productTitlePriceAndDescriptionAreVisible()[pri:0, instance:test.ProductDetailsTest@f79a760]" started-at="2025-09-06T12:10:57 IST" name="productTitlePriceAndDescriptionAreVisible" finished-at="2025-09-06T12:11:05 IST" duration-ms="8264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productTitlePriceAndDescriptionAreVisible -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.ProductDetailsTest@f79a760]" started-at="2025-09-06T12:11:05 IST" name="tearDown" finished-at="2025-09-06T12:11:05 IST" duration-ms="476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=productTitlePriceAndDescriptionAreVisible status=SUCCESS method=ProductDetailsTest.productTitlePriceAndDescriptionAreVisible()[pri:0, instance:test.ProductDetailsTest@f79a760] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.ProductDetailsTest -->
      <class name="test.SignupLoginLogoutTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.SignupLoginLogoutTest@4721d212]" started-at="2025-09-06T12:10:04 IST" name="setUp" finished-at="2025-09-06T12:10:05 IST" duration-ms="1002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.SignupLoginLogoutTest.signupLoginAndLogout() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="signupLoginAndLogout()[pri:0, instance:test.SignupLoginLogoutTest@4721d212]" started-at="2025-09-06T12:10:05 IST" name="signupLoginAndLogout" description="Sign up a unique user, login and then logout (stable - doesn&#039;t require pre-created user)" finished-at="2025-09-06T12:10:43 IST" duration-ms="38248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupLoginAndLogout -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.SignupLoginLogoutTest@4721d212]" started-at="2025-09-06T12:10:44 IST" name="tearDown" finished-at="2025-09-06T12:10:44 IST" duration-ms="407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signupLoginAndLogout status=SUCCESS method=SignupLoginLogoutTest.signupLoginAndLogout()[pri:0, instance:test.SignupLoginLogoutTest@4721d212] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.SignupLoginLogoutTest -->
      <class name="test.DeleteSpecificItemTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.DeleteSpecificItemTest@12dae582]" started-at="2025-09-06T12:11:21 IST" name="setUp" finished-at="2025-09-06T12:11:23 IST" duration-ms="1322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.DeleteSpecificItemTest.deletingOneItemKeepsOtherAndUpdatesTotal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="deletingOneItemKeepsOtherAndUpdatesTotal()[pri:0, instance:test.DeleteSpecificItemTest@12dae582]" started-at="2025-09-06T12:11:23 IST" name="deletingOneItemKeepsOtherAndUpdatesTotal" finished-at="2025-09-06T12:11:46 IST" duration-ms="22895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletingOneItemKeepsOtherAndUpdatesTotal -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.DeleteSpecificItemTest@12dae582]" started-at="2025-09-06T12:11:46 IST" name="tearDown" finished-at="2025-09-06T12:11:46 IST" duration-ms="513" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deletingOneItemKeepsOtherAndUpdatesTotal status=SUCCESS method=DeleteSpecificItemTest.deletingOneItemKeepsOtherAndUpdatesTotal()[pri:0, instance:test.DeleteSpecificItemTest@12dae582] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.DeleteSpecificItemTest -->
      <class name="test.PlaceOrderTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.PlaceOrderTest@619bfe29]" started-at="2025-09-06T12:12:00 IST" name="setUp" finished-at="2025-09-06T12:12:01 IST" duration-ms="1099" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.PlaceOrderTest.placeOrderSuccessfully()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="placeOrderSuccessfully()[pri:0, instance:test.PlaceOrderTest@619bfe29]" started-at="2025-09-06T12:12:01 IST" name="placeOrderSuccessfully" description="Place order and verify confirmation" finished-at="2025-09-06T12:12:17 IST" duration-ms="15708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrderSuccessfully -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.PlaceOrderTest@619bfe29]" started-at="2025-09-06T12:12:17 IST" name="tearDown" finished-at="2025-09-06T12:12:17 IST" duration-ms="480" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeOrderSuccessfully status=SUCCESS method=PlaceOrderTest.placeOrderSuccessfully()[pri:0, instance:test.PlaceOrderTest@619bfe29] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.PlaceOrderTest -->
      <class name="test.EmptyLoginValidationTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.EmptyLoginValidationTest@630cb4a4]" started-at="2025-09-06T12:10:44 IST" name="setUp" finished-at="2025-09-06T12:10:45 IST" duration-ms="1062" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.EmptyLoginValidationTest.loginWithEmptyFieldsShowsAlert()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginWithEmptyFieldsShowsAlert()[pri:0, instance:test.EmptyLoginValidationTest@630cb4a4]" started-at="2025-09-06T12:10:45 IST" name="loginWithEmptyFieldsShowsAlert" finished-at="2025-09-06T12:10:48 IST" duration-ms="2695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithEmptyFieldsShowsAlert -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.EmptyLoginValidationTest@630cb4a4]" started-at="2025-09-06T12:10:48 IST" name="tearDown" finished-at="2025-09-06T12:10:48 IST" duration-ms="513" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithEmptyFieldsShowsAlert status=SUCCESS method=EmptyLoginValidationTest.loginWithEmptyFieldsShowsAlert()[pri:0, instance:test.EmptyLoginValidationTest@630cb4a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.EmptyLoginValidationTest -->
      <class name="test.AddToCartTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.AddToCartTest@14f5da2c]" started-at="2025-09-06T12:11:05 IST" name="setUp" finished-at="2025-09-06T12:11:06 IST" duration-ms="985" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.AddToCartTest.addPhoneAndLaptopToCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addPhoneAndLaptopToCart()[pri:0, instance:test.AddToCartTest@14f5da2c]" started-at="2025-09-06T12:11:06 IST" name="addPhoneAndLaptopToCart" description="Add phone and laptop to cart, then verify both exist" finished-at="2025-09-06T12:11:21 IST" duration-ms="14299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPhoneAndLaptopToCart -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@14f5da2c]" started-at="2025-09-06T12:11:21 IST" name="tearDown" finished-at="2025-09-06T12:11:21 IST" duration-ms="693" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addPhoneAndLaptopToCart status=SUCCESS method=AddToCartTest.addPhoneAndLaptopToCart()[pri:0, instance:test.AddToCartTest@14f5da2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.AddToCartTest -->
      <class name="test.SignupLoginTest">
        <test-method is-config="true" signature="startReport()[pri:0, instance:test.SignupLoginTest@7894f09b]" started-at="2025-09-06T12:09:50 IST" name="startReport" finished-at="2025-09-06T12:09:50 IST" duration-ms="412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.SignupLoginTest@7894f09b]" started-at="2025-09-06T12:09:50 IST" name="setUp" finished-at="2025-09-06T12:09:53 IST" duration-ms="2800" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.SignupLoginTest.signupAndLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="signupAndLogin()[pri:0, instance:test.SignupLoginTest@7894f09b]" started-at="2025-09-06T12:09:53 IST" name="signupAndLogin" description="Sign up a new user and verify login" finished-at="2025-09-06T12:10:03 IST" duration-ms="10574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupAndLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.SignupLoginTest@7894f09b]" started-at="2025-09-06T12:10:04 IST" name="tearDown" finished-at="2025-09-06T12:10:04 IST" duration-ms="490" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signupAndLogin status=SUCCESS method=SignupLoginTest.signupAndLogin()[pri:0, instance:test.SignupLoginTest@7894f09b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flushReport()[pri:0, instance:test.SignupLoginTest@7894f09b]" started-at="2025-09-06T12:12:28 IST" name="flushReport" finished-at="2025-09-06T12:12:29 IST" duration-ms="707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
      </class> <!-- test.SignupLoginTest -->
      <class name="test.CheckoutNegativeTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:test.CheckoutNegativeTest@5b057c8c]" started-at="2025-09-06T12:12:17 IST" name="setUp" finished-at="2025-09-06T12:12:18 IST" duration-ms="1224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.CheckoutNegativeTest.purchaseWithMissingFieldsShowsValidation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="purchaseWithMissingFieldsShowsValidation()[pri:0, instance:test.CheckoutNegativeTest@5b057c8c]" started-at="2025-09-06T12:12:18 IST" name="purchaseWithMissingFieldsShowsValidation" finished-at="2025-09-06T12:12:28 IST" duration-ms="9461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseWithMissingFieldsShowsValidation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.CheckoutNegativeTest@5b057c8c]" started-at="2025-09-06T12:12:28 IST" name="tearDown" finished-at="2025-09-06T12:12:28 IST" duration-ms="440" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=purchaseWithMissingFieldsShowsValidation status=SUCCESS method=CheckoutNegativeTest.purchaseWithMissingFieldsShowsValidation()[pri:0, instance:test.CheckoutNegativeTest@5b057c8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.CheckoutNegativeTest -->
    </test> <!-- Functional Tests -->
  </suite> <!-- DemoBlazeSuite -->
</testng-results>
